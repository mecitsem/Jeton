@using Jeton.Core.Common
@model Jeton.Admin.Web.ViewModel.SettingViewModel

@{
    ViewBag.Title = "Create Setting";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<!-- /.row -->
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-info">
            <div class="panel-heading">
                Create new setting
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">

                @using (Html.BeginForm("Create", "Settings", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                            </div>
                            <div class="col-md-5">
                                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Value, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Value, new {htmlAttributes = new {@class = "form-control"}})
                            </div>
                            <div class="col-md-5">
                                @Html.ValidationMessageFor(model => model.Value, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ValueType, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-5">
                                @Html.DropDownList("ValueType", EnumHelper.GetSelectList(typeof(Constants.ValueType)), new {@class = "form-control"})
                            </div>
                            <div class="col-md-5">
                                @Html.ValidationMessageFor(model => model.ValueType, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-5">
                                @Html.TextAreaFor(model => model.Description,  new {@class = "form-control"})
                            </div>
                            <div class="col-md-5">
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-success"/>
                            </div>
                        </div>
                    </div>
                }


            </div>

            <div class="panel-footer">

                @Html.ActionLink("Back to list", "Index", null, new { @class = "btn btn-default" })

            </div>
        </div>
    </div>
</div>